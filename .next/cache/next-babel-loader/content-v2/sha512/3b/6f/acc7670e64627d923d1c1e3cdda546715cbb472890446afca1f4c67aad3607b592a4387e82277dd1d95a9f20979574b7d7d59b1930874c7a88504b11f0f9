{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/anomy/Documents/#100DaysOfCode/day-001/motional-beer/components/ActiveLink.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nexport var ActiveLink = function ActiveLink(_ref) {\n  _s();\n\n  var href = _ref.href,\n      children = _ref.children;\n  var router = useRouter();\n  var className = children.props.className || '';\n\n  if (router.pathname === href) {\n    className = \"\".concat(className, \" selected\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    scroll: false,\n    href: href,\n    shallow: true,\n    children: /*#__PURE__*/React.cloneElement(children, {\n      className: className\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ActiveLink, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = ActiveLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveLink\");","map":{"version":3,"sources":["/home/anomy/Documents/#100DaysOfCode/day-001/motional-beer/components/ActiveLink.js"],"names":["React","Link","useRouter","ActiveLink","href","children","router","className","props","pathname","cloneElement"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAwB;AAAA;;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAChD,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEA,MAAIK,SAAS,GAAGF,QAAQ,CAACG,KAAT,CAAeD,SAAf,IAA4B,EAA5C;;AACA,MAAID,MAAM,CAACG,QAAP,KAAoBL,IAAxB,EAA8B;AAC5BG,IAAAA,SAAS,aAAMA,SAAN,cAAT;AACD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAE,KAAd;AAAqB,IAAA,IAAI,EAAEH,IAA3B;AAAiC,IAAA,OAAO,EAAE,IAA1C;AAAA,2BACGJ,KAAK,CAACU,YAAN,CAAmBL,QAAnB,EAA6B;AAAEE,MAAAA,SAAS,EAATA;AAAF,KAA7B;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAbM;;GAAMJ,U;UACID,S;;;KADJC,U","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nexport const ActiveLink = ({ href, children }) => {\n  const router = useRouter();\n\n  let className = children.props.className || '';\n  if (router.pathname === href) {\n    className = `${className} selected`;\n  }\n\n  return (\n    <Link scroll={false} href={href} shallow={true}>\n      {React.cloneElement(children, { className })}\n    </Link>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}